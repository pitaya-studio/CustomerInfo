<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd"
	default-lazy-init="true">

	<description>Spring Configuration</description>

	<!-- 加载配置属性文件 -->
	<context:property-placeholder
		ignore-unresolvable="true" location="classpath*:/application.properties" />

	<!-- 获取bean工具注入 -->
	<bean id="springContextHolder" class="com.trekiz.admin.common.utils.SpringContextHolder"
		lazy-init="false" />
	<!-- 获取bean工具注入 -->
	<bean id="springContextUtil" class="com.quauq.review.core.utils.SpringContextUtil"
		lazy-init="false" />
	<!-- 使用Annotation自动注册Bean，解决事物失效问题：在主容器中不扫描@Controller注解，在SpringMvc中只扫描@Controller注解。 -->
	<context:component-scan base-package="com.trekiz.admin,com.quauq.multi.tenant,com.quauq.review,com.quauq.activiti.extend"><!-- base-package 
			如果多个，用“,”分隔 -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 多租户配置 begin -->
	<!-- 获取bean工具注入 -->
	<bean id="applicationReflect" class="com.quauq.multi.tenant.spring.ApplicationReflect"
		lazy-init="false" />


	<!-- 多租户配置 end -->
	<!-- 配置 JPA Entity Manager -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		depends-on="applicationReflect">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="com.trekiz.admin,com.quauq.multi.tenant,com.quauq.review" /><!-- 
			如果多个，用“,”分隔 -->
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>
				<prop key="net.sf.ehcache.configurationResourceName">cache/ehcache-hibernate-local.xml</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
				<!-- Hibernate Search -->
				<prop key="hibernate.search.default.directory_provider">${hibernate.search.default.directory_provider}</prop>
				<prop key="hibernate.search.default.indexBase">${hibernate.search.default.indexBase}</prop>
				<!-- 重建索引的线程数 -->
				<prop key="hibernate.search.worker.thread_pool.size">${hibernate.search.work.index.threads}</prop>
				<!-- 设置外连接抓取树的最大深度 -->
				<!-- <prop key="hibernate.max_fetch_depth">1</prop> -->

				<!-- hibernate multi tenant config -->
				<prop key="hibernate.multiTenancy">DATABASE</prop>
				<prop key="hibernate.tenant_identifier_resolver">com.quauq.multi.tenant.hibernate.MyCurrentTenantIdentifierResolver
				</prop>
				<prop key="hibernate.multi_tenant_connection_provider">com.quauq.multi.tenant.hibernate.MyMultiTenantConnectionProviderImpl
				</prop>

			</props>
		</property>
	</bean>

	<!-- 指定JPA实现厂商适配器 -->
	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />

	<!-- 配置 Spring Data JPA， base-package 如果多个，用“,”分隔 -->
	<jpa:repositories base-package="com.trekiz.admin,com.quauq.multi.tenant,com.quauq.review"
		transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory" />

	<!-- 配置 JPA Transaction -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- 配置 Annotation 驱动，定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- 配置 JSR303 Bean Validator 定义 -->
	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	
	<!-- Production 环境 -->
	<beans profile="production">

		<!-- 数据源配置, 使用 BoneCP 数据库连接池 -->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">
			<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
			<property name="driverClassName" value="${jdbc.driver}" />

			<!-- 基本属性 url、user、password -->
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />

			<!-- 配置初始化大小、最小、最大 -->
			<property name="initialSize" value="${pool.minIdle}" />
			<property name="minIdle" value="${pool.minIdle}" />
			<property name="maxActive" value="${pool.maxActive}" />

			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="60000" />

			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />

			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />

			<property name="validationQuery" value="SELECT 'x'" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="true" />
			<property name="testOnReturn" value="true" />

			<!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用） <property name="poolPreparedStatements" 
				value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" 
				value="20" /> -->

			<!-- 配置监控统计拦截的filters -->
			<property name="filters" value="stat" />
		</bean>
	</beans>
</beans>